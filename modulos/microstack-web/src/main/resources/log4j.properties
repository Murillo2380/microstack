# Default to info level output; this is very handy if you eventually use Hibernate as well.
log4j.rootCategory=info, A1

# A1 is set to be a ConsoleAppender.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%p] {%t} %d %c{2} %m%n

# Service category names are the name of the defining module class
# and then the service id.
log4j.category.es.dicoruna.subtel.services.AppModule.TimingFilter=info

# Outputs a list of pages, components and mixins at startup.
log4j.category.org.apache.tapestry5.services.TapestryModule.ComponentClassResolver=info

# Outputs startup statistics; elapsed time to setup and initialize the registry, a list of
# available services, and a launch banner that includes the Tapestry version number.
log4j.category.org.apache.tapestry5.TapestryFilter=info

# Turning on debug mode for a page's or component's transformer logger
# will show all of the code changes that occur when the
# class is loaded.

# log4j.category.tapestry.transformer.es.dicoruna.subtel.pages.Index=debug

# Turning on debug mode for a component's events logger will show all the events triggered on the
# component, and which component methods are invoked as a result.

#log4j.category.tapestry.events.es.dicoruna.subtel.pages.solicitudes=debug

# Turning on trace mode for a page's render logger provides extended information about every step
# in rendering (this is not generally helpful).  Turning on debug mode will add a one-line
# summary that includes the elapsed render time, which can be useful in tracking down
# performance issues.

#log4j.category.tapestry.render.es.dicoruna.subtel.pages.solicitudes=debug

# Debug de spring: transacciones, sql, etc

#log4j.category.org.springframework.jdbc.core.JdbcTemplate = trace
#log4j.category.org.springframework.jdbc.core.StatementCreatorUtils=trace
#log4j.logger.org.springframework.transaction.interceptor = trace
#log4j.logger.org.springframework.transaction.support = trace
log4j.logger.org.springframework.jdbc.datasource.DataSourceTransactionManager = trace
#org.springframework.transaction.support.TransactionTemplate = trace
log4j.logger.org.springframework.jdbc.datasource = trace

#
# Enviar por correo algunos errores
#log4j.logger.es.dicoruna.subtel.pages.ProduccionExceptionReport = ERROR, mailAppender
# Nivel por defecto para subtel
log4j.category.es.dicoruna = debug
log4j.category.com.zaxxer.hikari = debug
log4j.category.com.zaxxer.hikari.pool.HikariPool = info
log4j.category.org.springframework.jdbc.core.JdbcTemplate = debug
log4j.category.org.jooq = debug
#

#
log4j.logger.org.eclipse.jetty.io.IdleTimeout = debug

#
